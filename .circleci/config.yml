version: 2.1
orbs:
  coverage-reporter: codacy/coverage-reporter@11.2.1
executors:
  python37:
    docker:
      - image: circleci/python:3.7.2
commands:
  bootstrap:
    steps:
      - run:
          name: Add python user PATH into PATH
          command: echo "export PATH=$PATH:$HOME/.local/bin" >> $BASH_ENV
      - run: 
          name: Install python tools
          command: pip install --user poetry==1.0.0b9
      - run:
          name: Set venv inproject
          command: poetry config virtualenvs.in-project true
jobs:
  install_dependencies:
    executor: python37
    steps:
      - checkout
      - bootstrap
      - run:
          name: Install dependencies
          command: poetry install
          no_output_timeout: 1200
      - run:
          name: Plot tool versions
          command: poetry run mypy --version & poetry run pylint --version && poetry run pytest --version && poetry run black --version
      - persist_to_workspace:
          root: .
          paths: .venv
  check:
    executor: python37
    steps:
      - checkout
      - bootstrap
      - attach_workspace:
          at: .
      - run:
          name: Check if the code is formatted
          command: poetry run black --check --quiet dataprep
      - run:
          name: Type check the project
          command: poetry run mypy dataprep
      - run:
          name: Test the project
          command: poetry run pytest --cov=dataprep dataprep/tests
      - run:
          name: Style check the project
          command: poetry run pylint dataprep
      - run:
          name: Upload coverage data to codecov
          command: poetry run codecov
      - coverage-reporter/send_report:
          coverage-reports: 'coverage.xml'
          project-token: $CODACY_PROJECT_TOKEN
  docs-build:
    executor: python37
    steps:
      - checkout
      - run:
          name: Pandoc Installation
          command: curl -L https://github.com/jgm/pandoc/releases/download/2.9.2.1/pandoc-2.9.2.1-1-amd64.deb -o /tmp/pandoc.deb && sudo dpkg -i /tmp/pandoc.deb
      - bootstrap
      - attach_workspace:
          at: .
      - run:
          name: Build docs
          command: poetry run sphinx-build -M html docs/source docs/build
      - persist_to_workspace:
          root: .
          paths: docs/build/html
  docs-deploy:
    docker:
      - image: node:8.10.0
    steps:
      - add_ssh_keys:
          fingerprints:
            - "b7:f1:2a:54:c8:90:80:78:ba:30:d9:9b:b8:7d:03:10"
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Install and configure dependencies
          command: |
            npm install -g --silent gh-pages@2.0.1
            git config user.email "ci@sfu.db"
            git config user.name "ci"
      - run:
          name: Disable jekyll builds
          command: touch docs/build/html/.nojekyll
      - run:
          name: Deploy docs to gh-pages branch
          command: gh-pages --dotfiles --message "[skip ci] Updates" --dist docs/build/html
workflows:
  build_and_test:
    jobs:
      - install_dependencies
      - check:
          requires:
            - install_dependencies
      - docs-build:
          requires:
            - install_dependencies
      - docs-deploy:
          requires:
            - check
            - docs-build
          filters:
            branches:
              only: master